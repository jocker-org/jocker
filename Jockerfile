#syntax=ghcr.io/jocker-org/jocker

local std = import "std.libsonnet";

{
  "stages": [
    {
      "name": "builder",
      "from": "alpine:latest",
      "steps": [
	std.stage.step.workdir("/src"),
	// {"type": "WORKDIR", "path": "/src"},
        {"type": "RUN", "command": "apk update"},
        {"type": "RUN", "command": "apk upgrade"},
        {"type": "RUN", "command": "apk add mkdocs"},
        {"type": "COPY", "src": "mkdocs.yml", "dst": "/src"},
        {"type": "COPY", "src": "./docs", "dst": "/src/docs"},
        {"type": "RUN", "command": "mkdocs build"}
      ]
    },
    {
      "name": "server",
      "from": "alpine:latest",
      "steps": [
        {"type": "RUN", "command": "apk update"},
        {"type": "RUN", "command": "apk upgrade"},
        {"type": "RUN", "command": "apk add darkhttpd"},
        {"type": "COPY", "from": "builder", "src": "/src/site", "dst": "/www"},
      ],
    },
  ],
  "image": {
    "Env": ["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"],
    "Cmd": ["darkhttpd", "/www"],
  },
  "excludes" : ["*", "!docs", "!mkdocs.yml"],
}

// Local Variables:
// mode: jsonnet
// End:
